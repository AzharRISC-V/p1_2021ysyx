$version Generated by VerilatedVcd $end
$date Fri Aug 27 14:57:36 2021 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 W$ clock $end
  $var wire 64 Y$ io_logCtrl_log_begin [63:0] $end
  $var wire 64 [$ io_logCtrl_log_end [63:0] $end
  $var wire 64 ]$ io_logCtrl_log_level [63:0] $end
  $var wire  1 _$ io_perfInfo_clean $end
  $var wire  1 `$ io_perfInfo_dump $end
  $var wire  8 d$ io_uart_in_ch [7:0] $end
  $var wire  1 c$ io_uart_in_valid $end
  $var wire  8 b$ io_uart_out_ch [7:0] $end
  $var wire  1 a$ io_uart_out_valid $end
  $var wire  1 X$ reset $end
  $scope module SimTop $end
   $var wire  1 W$ clock $end
   $var wire 32 (" cmt_inst [31:0] $end
   $var wire 64 &" cmt_pc [63:0] $end
   $var wire  1 )" cmt_valid $end
   $var wire 64 $" cmt_wdata [63:0] $end
   $var wire  8 #" cmt_wdest [7:0] $end
   $var wire  1 "" cmt_wen $end
   $var wire 64 ," cycleCnt [63:0] $end
   $var wire  5 p$ ex_rd_i [4:0] $end
   $var wire 64 5 ex_rd_wdata_o [63:0] $end
   $var wire  1 :$ ex_rd_wen_o $end
   $var wire  3 U$ funct3 [2:0] $end
   $var wire  7 5! funct7 [6:0] $end
   $var wire 32 ) inst [31:0] $end
   $var wire  1 m$ inst_start $end
   $var wire  3 S# inst_type [2:0] $end
   $var wire  1 V$ inst_valid $end
   $var wire  1 h$ instcycle_cnt_clear $end
   $var wire  8 }! instcycle_cnt_val [7:0] $end
   $var wire 64 ." instrCnt [63:0] $end
   $var wire 64 Y$ io_logCtrl_log_begin [63:0] $end
   $var wire 64 [$ io_logCtrl_log_end [63:0] $end
   $var wire 64 ]$ io_logCtrl_log_level [63:0] $end
   $var wire  1 _$ io_perfInfo_clean $end
   $var wire  1 `$ io_perfInfo_dump $end
   $var wire  8 d$ io_uart_in_ch [7:0] $end
   $var wire  1 c$ io_uart_in_valid $end
   $var wire  8 b$ io_uart_out_ch [7:0] $end
   $var wire  1 a$ io_uart_out_valid $end
   $var wire 64 ;$ mem_raddr [63:0] $end
   $var wire  1 q$ mem_rd_wen_o $end
   $var wire 64 =$ mem_rdata [63:0] $end
   $var wire  1 7 mem_ren $end
   $var wire 64 ;! mem_waddr [63:0] $end
   $var wire 64 V# mem_wdata [63:0] $end
   $var wire  1 8 mem_wen $end
   $var wire 64 9 mem_wmask [63:0] $end
   $var wire 64 , op1 [63:0] $end
   $var wire 64 . op2 [63:0] $end
   $var wire  5 T$ opcode [4:0] $end
   $var wire  5 o$ opcode_o [4:0] $end
   $var wire 64 ' pc [63:0] $end
   $var wire 64 % pc_cur [63:0] $end
   $var wire  1 j$ pc_jmp $end
   $var wire  1 2 pc_jmp_o $end
   $var wire 64 k$ pc_jmpaddr [63:0] $end
   $var wire 64 3 pc_jmpaddr_o [63:0] $end
   $var wire  5 S$ rd [4:0] $end
   $var wire 64 ?$ rd_wdata [63:0] $end
   $var wire  1 ; rd_wen $end
   $var wire 64 X# regs(0) [63:0] $end
   $var wire 64 Z# regs(1) [63:0] $end
   $var wire 64 l# regs(10) [63:0] $end
   $var wire 64 n# regs(11) [63:0] $end
   $var wire 64 p# regs(12) [63:0] $end
   $var wire 64 r# regs(13) [63:0] $end
   $var wire 64 t# regs(14) [63:0] $end
   $var wire 64 v# regs(15) [63:0] $end
   $var wire 64 x# regs(16) [63:0] $end
   $var wire 64 z# regs(17) [63:0] $end
   $var wire 64 |# regs(18) [63:0] $end
   $var wire 64 ~# regs(19) [63:0] $end
   $var wire 64 \# regs(2) [63:0] $end
   $var wire 64 "$ regs(20) [63:0] $end
   $var wire 64 $$ regs(21) [63:0] $end
   $var wire 64 &$ regs(22) [63:0] $end
   $var wire 64 ($ regs(23) [63:0] $end
   $var wire 64 *$ regs(24) [63:0] $end
   $var wire 64 ,$ regs(25) [63:0] $end
   $var wire 64 .$ regs(26) [63:0] $end
   $var wire 64 0$ regs(27) [63:0] $end
   $var wire 64 2$ regs(28) [63:0] $end
   $var wire 64 4$ regs(29) [63:0] $end
   $var wire 64 ^# regs(3) [63:0] $end
   $var wire 64 6$ regs(30) [63:0] $end
   $var wire 64 8$ regs(31) [63:0] $end
   $var wire 64 `# regs(4) [63:0] $end
   $var wire 64 b# regs(5) [63:0] $end
   $var wire 64 d# regs(6) [63:0] $end
   $var wire 64 f# regs(7) [63:0] $end
   $var wire 64 h# regs(8) [63:0] $end
   $var wire 64 j# regs(9) [63:0] $end
   $var wire 64 0" regs_diff(0) [63:0] $end
   $var wire 64 2" regs_diff(1) [63:0] $end
   $var wire 64 D" regs_diff(10) [63:0] $end
   $var wire 64 F" regs_diff(11) [63:0] $end
   $var wire 64 H" regs_diff(12) [63:0] $end
   $var wire 64 J" regs_diff(13) [63:0] $end
   $var wire 64 L" regs_diff(14) [63:0] $end
   $var wire 64 N" regs_diff(15) [63:0] $end
   $var wire 64 P" regs_diff(16) [63:0] $end
   $var wire 64 R" regs_diff(17) [63:0] $end
   $var wire 64 T" regs_diff(18) [63:0] $end
   $var wire 64 V" regs_diff(19) [63:0] $end
   $var wire 64 4" regs_diff(2) [63:0] $end
   $var wire 64 X" regs_diff(20) [63:0] $end
   $var wire 64 Z" regs_diff(21) [63:0] $end
   $var wire 64 \" regs_diff(22) [63:0] $end
   $var wire 64 ^" regs_diff(23) [63:0] $end
   $var wire 64 `" regs_diff(24) [63:0] $end
   $var wire 64 b" regs_diff(25) [63:0] $end
   $var wire 64 d" regs_diff(26) [63:0] $end
   $var wire 64 f" regs_diff(27) [63:0] $end
   $var wire 64 h" regs_diff(28) [63:0] $end
   $var wire 64 j" regs_diff(29) [63:0] $end
   $var wire 64 6" regs_diff(3) [63:0] $end
   $var wire 64 l" regs_diff(30) [63:0] $end
   $var wire 64 n" regs_diff(31) [63:0] $end
   $var wire 64 8" regs_diff(4) [63:0] $end
   $var wire 64 :" regs_diff(5) [63:0] $end
   $var wire 64 <" regs_diff(6) [63:0] $end
   $var wire 64 >" regs_diff(7) [63:0] $end
   $var wire 64 @" regs_diff(8) [63:0] $end
   $var wire 64 B" regs_diff(9) [63:0] $end
   $var wire  1 X$ reset $end
   $var wire  5 4! rs1 [4:0] $end
   $var wire 64 T# rs1_data [63:0] $end
   $var wire  1 * rs1_ren $end
   $var wire  5 n$ rs2 [4:0] $end
   $var wire 64 V# rs2_data [63:0] $end
   $var wire  1 + rs2_ren $end
   $var wire  1 e$ sig_memread $end
   $var wire  1 # sig_memread_ok $end
   $var wire  1 f$ sig_memwrite $end
   $var wire  1 $ sig_memwrite_ok $end
   $var wire  1 i$ sig_wb $end
   $var wire  1 g$ sig_wb_ok $end
   $var wire 64 0 t1 [63:0] $end
   $var wire  1 *" trap $end
   $var wire  8 +" trap_code [7:0] $end
   $var wire 64 s$ wb_rd_wdata_i [63:0] $end
   $var wire 64 v$ wb_rd_wdata_o [63:0] $end
   $var wire  1 r$ wb_rd_wen_i $end
   $var wire  1 u$ wb_rd_wen_o $end
   $scope module DifftestArchFpRegState $end
    $var wire  1 W$ clock $end
    $var wire  8 ~$ coreid [7:0] $end
    $var wire 64 z$ fpr_0 [63:0] $end
    $var wire 64 z$ fpr_1 [63:0] $end
    $var wire 64 z$ fpr_10 [63:0] $end
    $var wire 64 z$ fpr_11 [63:0] $end
    $var wire 64 z$ fpr_12 [63:0] $end
    $var wire 64 z$ fpr_13 [63:0] $end
    $var wire 64 z$ fpr_14 [63:0] $end
    $var wire 64 z$ fpr_15 [63:0] $end
    $var wire 64 z$ fpr_16 [63:0] $end
    $var wire 64 z$ fpr_17 [63:0] $end
    $var wire 64 z$ fpr_18 [63:0] $end
    $var wire 64 z$ fpr_19 [63:0] $end
    $var wire 64 z$ fpr_2 [63:0] $end
    $var wire 64 z$ fpr_20 [63:0] $end
    $var wire 64 z$ fpr_21 [63:0] $end
    $var wire 64 z$ fpr_22 [63:0] $end
    $var wire 64 z$ fpr_23 [63:0] $end
    $var wire 64 z$ fpr_24 [63:0] $end
    $var wire 64 z$ fpr_25 [63:0] $end
    $var wire 64 z$ fpr_26 [63:0] $end
    $var wire 64 z$ fpr_27 [63:0] $end
    $var wire 64 z$ fpr_28 [63:0] $end
    $var wire 64 z$ fpr_29 [63:0] $end
    $var wire 64 z$ fpr_3 [63:0] $end
    $var wire 64 z$ fpr_30 [63:0] $end
    $var wire 64 z$ fpr_31 [63:0] $end
    $var wire 64 z$ fpr_4 [63:0] $end
    $var wire 64 z$ fpr_5 [63:0] $end
    $var wire 64 z$ fpr_6 [63:0] $end
    $var wire 64 z$ fpr_7 [63:0] $end
    $var wire 64 z$ fpr_8 [63:0] $end
    $var wire 64 z$ fpr_9 [63:0] $end
   $upscope $end
   $scope module DifftestArchIntRegState $end
    $var wire  1 W$ clock $end
    $var wire  8 ~$ coreid [7:0] $end
    $var wire 64 p" gpr_0 [63:0] $end
    $var wire 64 r" gpr_1 [63:0] $end
    $var wire 64 &# gpr_10 [63:0] $end
    $var wire 64 (# gpr_11 [63:0] $end
    $var wire 64 *# gpr_12 [63:0] $end
    $var wire 64 ,# gpr_13 [63:0] $end
    $var wire 64 .# gpr_14 [63:0] $end
    $var wire 64 0# gpr_15 [63:0] $end
    $var wire 64 2# gpr_16 [63:0] $end
    $var wire 64 4# gpr_17 [63:0] $end
    $var wire 64 6# gpr_18 [63:0] $end
    $var wire 64 8# gpr_19 [63:0] $end
    $var wire 64 t" gpr_2 [63:0] $end
    $var wire 64 :# gpr_20 [63:0] $end
    $var wire 64 <# gpr_21 [63:0] $end
    $var wire 64 ># gpr_22 [63:0] $end
    $var wire 64 @# gpr_23 [63:0] $end
    $var wire 64 B# gpr_24 [63:0] $end
    $var wire 64 D# gpr_25 [63:0] $end
    $var wire 64 F# gpr_26 [63:0] $end
    $var wire 64 H# gpr_27 [63:0] $end
    $var wire 64 J# gpr_28 [63:0] $end
    $var wire 64 L# gpr_29 [63:0] $end
    $var wire 64 v" gpr_3 [63:0] $end
    $var wire 64 N# gpr_30 [63:0] $end
    $var wire 64 P# gpr_31 [63:0] $end
    $var wire 64 x" gpr_4 [63:0] $end
    $var wire 64 z" gpr_5 [63:0] $end
    $var wire 64 |" gpr_6 [63:0] $end
    $var wire 64 ~" gpr_7 [63:0] $end
    $var wire 64 "# gpr_8 [63:0] $end
    $var wire 64 $# gpr_9 [63:0] $end
   $upscope $end
   $scope module DifftestCSRState $end
    $var wire  1 W$ clock $end
    $var wire  8 ~$ coreid [7:0] $end
    $var wire 64 z$ mcause [63:0] $end
    $var wire 64 z$ medeleg [63:0] $end
    $var wire 64 z$ mepc [63:0] $end
    $var wire 64 z$ mideleg [63:0] $end
    $var wire 64 z$ mie [63:0] $end
    $var wire 64 z$ mip [63:0] $end
    $var wire 64 z$ mscratch [63:0] $end
    $var wire 64 z$ mstatus [63:0] $end
    $var wire 64 z$ mtval [63:0] $end
    $var wire 64 z$ mtvec [63:0] $end
    $var wire  2 !% priviledgeMode [1:0] $end
    $var wire 64 z$ satp [63:0] $end
    $var wire 64 z$ scause [63:0] $end
    $var wire 64 z$ sepc [63:0] $end
    $var wire 64 z$ sscratch [63:0] $end
    $var wire 64 z$ sstatus [63:0] $end
    $var wire 64 z$ stval [63:0] $end
    $var wire 64 z$ stvec [63:0] $end
   $upscope $end
   $scope module DifftestInstrCommit $end
    $var wire  1 W$ clock $end
    $var wire  8 ~$ coreid [7:0] $end
    $var wire  8 ~$ index [7:0] $end
    $var wire 32 (" instr [31:0] $end
    $var wire  1 |$ isRVC $end
    $var wire 64 &" pc [63:0] $end
    $var wire  1 |$ scFailed $end
    $var wire  1 |$ skip $end
    $var wire  1 )" valid $end
    $var wire 64 $" wdata [63:0] $end
    $var wire  8 #" wdest [7:0] $end
    $var wire  1 "" wen $end
   $upscope $end
   $scope module DifftestTrapEvent $end
    $var wire  1 W$ clock $end
    $var wire  3 R# code [2:0] $end
    $var wire  8 ~$ coreid [7:0] $end
    $var wire 64 ," cycleCnt [63:0] $end
    $var wire 64 ." instrCnt [63:0] $end
    $var wire 64 &" pc [63:0] $end
    $var wire  1 *" valid $end
   $upscope $end
   $scope module Exe_stage $end
    $var wire  1 W$ clk $end
    $var wire  3 D funct3 [2:0] $end
    $var wire  3 U$ funct3_i [2:0] $end
    $var wire  7 E funct7 [6:0] $end
    $var wire  7 5! funct7_i [6:0] $end
    $var wire  8 }! instcycle_cnt_val [7:0] $end
    $var wire 64 F op1 [63:0] $end
    $var wire 64 , op1_i [63:0] $end
    $var wire 64 H op2 [63:0] $end
    $var wire 64 . op2_i [63:0] $end
    $var wire  5 C opcode [4:0] $end
    $var wire  5 T$ opcode_i [4:0] $end
    $var wire  1 2 pc_jmp $end
    $var wire 64 3 pc_jmpaddr [63:0] $end
    $var wire 64 5 rd_data [63:0] $end
    $var wire  1 :$ rd_wen $end
    $var wire  1 A$ rd_wen0 $end
    $var wire  1 X$ rst $end
    $var wire 64 J t1 [63:0] $end
    $var wire 64 0 t1_i [63:0] $end
   $upscope $end
   $scope module Id_stage $end
    $var wire 32 8! B_imm [31:0] $end
    $var wire 32 6! I_imm [31:0] $end
    $var wire 32 :! J_imm [31:0] $end
    $var wire 32 }$ R_imm [31:0] $end
    $var wire 32 7! S_imm [31:0] $end
    $var wire 32 9! U_imm [31:0] $end
    $var wire  1 W$ clk $end
    $var wire  3 U$ funct3 [2:0] $end
    $var wire  7 5! funct7 [6:0] $end
    $var wire  1 ~! id_active $end
    $var wire  1 !" id_inactive $end
    $var wire 64 @ imm [63:0] $end
    $var wire 32 B imm0 [31:0] $end
    $var wire 32 ) inst [31:0] $end
    $var wire  3 S# inst_type [2:0] $end
    $var wire  8 }! instcycle_cnt_val [7:0] $end
    $var wire 64 ;$ mem_raddr [63:0] $end
    $var wire 64 =$ mem_rdata [63:0] $end
    $var wire  1 7 mem_ren $end
    $var wire 64 ;! mem_waddr [63:0] $end
    $var wire 64 V# mem_wdata [63:0] $end
    $var wire  1 8 mem_wen $end
    $var wire 64 9 mem_wmask [63:0] $end
    $var wire 64 , op1 [63:0] $end
    $var wire 64 . op2 [63:0] $end
    $var wire  5 T$ opcode [4:0] $end
    $var wire 64 ' pc [63:0] $end
    $var wire 64 % pc_cur [63:0] $end
    $var wire  5 S$ rd [4:0] $end
    $var wire  5 4! rs1 [4:0] $end
    $var wire 64 T# rs1_data [63:0] $end
    $var wire  1 * rs1_ren $end
    $var wire  1 * rs1_ren0 $end
    $var wire  5 n$ rs2 [4:0] $end
    $var wire 64 V# rs2_data [63:0] $end
    $var wire  1 + rs2_ren $end
    $var wire  1 + rs2_ren0 $end
    $var wire  1 X$ rst $end
    $var wire  1 e$ sig_memread $end
    $var wire  1 f$ sig_memwrite $end
    $var wire 64 0 t1 [63:0] $end
   $upscope $end
   $scope module If_stage $end
    $var wire  1 W$ clk $end
    $var wire 32 ) inst [31:0] $end
    $var wire  8 }! instcycle_cnt_val [7:0] $end
    $var wire 64 ' pc [63:0] $end
    $var wire 64 % pc_cur [63:0] $end
    $var wire  1 2 pc_jmp $end
    $var wire 64 3 pc_jmpaddr [63:0] $end
    $var wire  1 X$ rst $end
    $var wire 64 < two_inst_data [63:0] $end
    $scope module RAMHelper $end
     $var wire  1 W$ clk $end
     $var wire  1 y$ en $end
     $var wire 64 > rIdx [63:0] $end
     $var wire 64 < rdata [63:0] $end
     $var wire 64 z$ wIdx [63:0] $end
     $var wire 64 z$ wdata [63:0] $end
     $var wire  1 |$ wen $end
     $var wire 64 z$ wmask [63:0] $end
    $upscope $end
   $upscope $end
   $scope module InstCycleCunter $end
    $var wire  1 h$ clear $end
    $var wire  1 W$ clk $end
    $var wire  8 x$ max [7:0] $end
    $var wire  1 X$ rst $end
    $var wire  8 }! val [7:0] $end
   $upscope $end
   $scope module Mem_stage $end
    $var wire  1 W$ clk $end
    $var wire  8 }! instcycle_cnt_val [7:0] $end
    $var wire 64 ;$ raddr [63:0] $end
    $var wire 64 =$ rdata [63:0] $end
    $var wire  1 7 ren $end
    $var wire  1 X$ rst $end
    $var wire  1 # sig_memread_ok $end
    $var wire  1 $ sig_memwrite_ok $end
    $var wire 64 ;! waddr [63:0] $end
    $var wire 64 V# wdata [63:0] $end
    $var wire  1 8 wen $end
    $var wire 64 9 wmask [63:0] $end
    $scope module Mem_access $end
     $var wire 64 ;$ addr [63:0] $end
     $var wire 64 E$ addr1 [63:0] $end
     $var wire 64 G$ addr2 [63:0] $end
     $var wire 64 C$ addr_rel [63:0] $end
     $var wire  3 I$ byte_offset [2:0] $end
     $var wire  1 W$ clk $end
     $var wire  1 B$ ena2 $end
     $var wire 64 =$ rdata [63:0] $end
     $var wire 64 J$ rdata1 [63:0] $end
     $var wire 64 L$ rdata2 [63:0] $end
     $var wire 64 =$ rdata_0 [63:0] $end
     $var wire  1 7 ren $end
     $var wire  1 # sig_memread_ok $end
     $var wire  1 $ sig_memwrite_ok $end
     $var wire 64 V# wdata [63:0] $end
     $var wire  1 8 wen $end
     $var wire 64 9 wmask [63:0] $end
     $var wire 64 N$ wmask1 [63:0] $end
     $var wire 64 P$ wmask2 [63:0] $end
    $upscope $end
   $upscope $end
   $scope module Regfile $end
    $var wire  1 W$ clk $end
    $var wire  5 S$ rd [4:0] $end
    $var wire 64 ?$ rd_data [63:0] $end
    $var wire  1 ; rd_wen $end
    $var wire 64 R regs(0) [63:0] $end
    $var wire 64 T regs(1) [63:0] $end
    $var wire 64 f regs(10) [63:0] $end
    $var wire 64 h regs(11) [63:0] $end
    $var wire 64 j regs(12) [63:0] $end
    $var wire 64 l regs(13) [63:0] $end
    $var wire 64 n regs(14) [63:0] $end
    $var wire 64 p regs(15) [63:0] $end
    $var wire 64 r regs(16) [63:0] $end
    $var wire 64 t regs(17) [63:0] $end
    $var wire 64 v regs(18) [63:0] $end
    $var wire 64 x regs(19) [63:0] $end
    $var wire 64 V regs(2) [63:0] $end
    $var wire 64 z regs(20) [63:0] $end
    $var wire 64 | regs(21) [63:0] $end
    $var wire 64 ~ regs(22) [63:0] $end
    $var wire 64 "! regs(23) [63:0] $end
    $var wire 64 $! regs(24) [63:0] $end
    $var wire 64 &! regs(25) [63:0] $end
    $var wire 64 (! regs(26) [63:0] $end
    $var wire 64 *! regs(27) [63:0] $end
    $var wire 64 ,! regs(28) [63:0] $end
    $var wire 64 .! regs(29) [63:0] $end
    $var wire 64 X regs(3) [63:0] $end
    $var wire 64 0! regs(30) [63:0] $end
    $var wire 64 2! regs(31) [63:0] $end
    $var wire 64 Z regs(4) [63:0] $end
    $var wire 64 \ regs(5) [63:0] $end
    $var wire 64 ^ regs(6) [63:0] $end
    $var wire 64 ` regs(7) [63:0] $end
    $var wire 64 b regs(8) [63:0] $end
    $var wire 64 d regs(9) [63:0] $end
    $var wire 64 =! regs_o(0) [63:0] $end
    $var wire 64 ?! regs_o(1) [63:0] $end
    $var wire 64 Q! regs_o(10) [63:0] $end
    $var wire 64 S! regs_o(11) [63:0] $end
    $var wire 64 U! regs_o(12) [63:0] $end
    $var wire 64 W! regs_o(13) [63:0] $end
    $var wire 64 Y! regs_o(14) [63:0] $end
    $var wire 64 [! regs_o(15) [63:0] $end
    $var wire 64 ]! regs_o(16) [63:0] $end
    $var wire 64 _! regs_o(17) [63:0] $end
    $var wire 64 a! regs_o(18) [63:0] $end
    $var wire 64 c! regs_o(19) [63:0] $end
    $var wire 64 A! regs_o(2) [63:0] $end
    $var wire 64 e! regs_o(20) [63:0] $end
    $var wire 64 g! regs_o(21) [63:0] $end
    $var wire 64 i! regs_o(22) [63:0] $end
    $var wire 64 k! regs_o(23) [63:0] $end
    $var wire 64 m! regs_o(24) [63:0] $end
    $var wire 64 o! regs_o(25) [63:0] $end
    $var wire 64 q! regs_o(26) [63:0] $end
    $var wire 64 s! regs_o(27) [63:0] $end
    $var wire 64 u! regs_o(28) [63:0] $end
    $var wire 64 w! regs_o(29) [63:0] $end
    $var wire 64 C! regs_o(3) [63:0] $end
    $var wire 64 y! regs_o(30) [63:0] $end
    $var wire 64 {! regs_o(31) [63:0] $end
    $var wire 64 E! regs_o(4) [63:0] $end
    $var wire 64 G! regs_o(5) [63:0] $end
    $var wire 64 I! regs_o(6) [63:0] $end
    $var wire 64 K! regs_o(7) [63:0] $end
    $var wire 64 M! regs_o(8) [63:0] $end
    $var wire 64 O! regs_o(9) [63:0] $end
    $var wire  5 4! rs1 [4:0] $end
    $var wire 64 T# rs1_data [63:0] $end
    $var wire  1 * rs1_ren $end
    $var wire  5 n$ rs2 [4:0] $end
    $var wire 64 V# rs2_data [63:0] $end
    $var wire  1 + rs2_ren $end
    $var wire  1 X$ rst $end
    $var wire  1 g$ sig_wb_ok $end
   $upscope $end
   $scope module Wb_stage $end
    $var wire  1 R$ ch $end
    $var wire  1 W$ clk $end
    $var wire 64 M ex_wdata [63:0] $end
    $var wire 64 5 ex_wdata_i [63:0] $end
    $var wire  1 L ex_wen $end
    $var wire  1 :$ ex_wen_i $end
    $var wire  8 }! instcycle_cnt_val [7:0] $end
    $var wire 64 P mem_wdata [63:0] $end
    $var wire 64 =$ mem_wdata_i [63:0] $end
    $var wire  1 O mem_wen $end
    $var wire  1 q$ mem_wen_i $end
    $var wire  1 X$ rst $end
    $var wire 64 ?$ wdata_o [63:0] $end
    $var wire  1 ; wen_o $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b0000000000000000000000000000000001111111111111111111111111111100 %
b0000000000000000000000000000000001111111111111111111111111111100 '
b00000000000000000000000000000000 )
0*
0+
b0000000000000000000000000000000000000000000000000000000000000000 ,
b0000000000000000000000000000000000000000000000000000000000000000 .
b0000000000000000000000000000000000000000000000000000000000000000 0
02
b0000000000000000000000000000000000000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000000000000000000000 5
07
08
b0000000000000000000000000000000000000000000000000000000000000000 9
0;
b0000000000000000000000000000000000000000000000000000000000000000 <
b0001111111111111111111111111111111111111111111111111111111111111 >
b0000000000000000000000000000000000000000000000000000000000000000 @
b00000000000000000000000000000000 B
b00000 C
b000 D
b0000000 E
b0000000000000000000000000000000000000000000000000000000000000000 F
b0000000000000000000000000000000000000000000000000000000000000000 H
b0000000000000000000000000000000000000000000000000000000000000000 J
0L
b0000000000000000000000000000000000000000000000000000000000000000 M
0O
b0000000000000000000000000000000000000000000000000000000000000000 P
b0000000000000000000000000000000000000000000000000000000000000000 R
b0000000000000000000000000000000000000000000000000000000000000000 T
b0000000000000000000000000000000000000000000000000000000000000000 V
b0000000000000000000000000000000000000000000000000000000000000000 X
b0000000000000000000000000000000000000000000000000000000000000000 Z
b0000000000000000000000000000000000000000000000000000000000000000 \
b0000000000000000000000000000000000000000000000000000000000000000 ^
b0000000000000000000000000000000000000000000000000000000000000000 `
b0000000000000000000000000000000000000000000000000000000000000000 b
b0000000000000000000000000000000000000000000000000000000000000000 d
b0000000000000000000000000000000000000000000000000000000000000000 f
b0000000000000000000000000000000000000000000000000000000000000000 h
b0000000000000000000000000000000000000000000000000000000000000000 j
b0000000000000000000000000000000000000000000000000000000000000000 l
b0000000000000000000000000000000000000000000000000000000000000000 n
b0000000000000000000000000000000000000000000000000000000000000000 p
b0000000000000000000000000000000000000000000000000000000000000000 r
b0000000000000000000000000000000000000000000000000000000000000000 t
b0000000000000000000000000000000000000000000000000000000000000000 v
b0000000000000000000000000000000000000000000000000000000000000000 x
b0000000000000000000000000000000000000000000000000000000000000000 z
b0000000000000000000000000000000000000000000000000000000000000000 |
b0000000000000000000000000000000000000000000000000000000000000000 ~
b0000000000000000000000000000000000000000000000000000000000000000 "!
b0000000000000000000000000000000000000000000000000000000000000000 $!
b0000000000000000000000000000000000000000000000000000000000000000 &!
b0000000000000000000000000000000000000000000000000000000000000000 (!
b0000000000000000000000000000000000000000000000000000000000000000 *!
b0000000000000000000000000000000000000000000000000000000000000000 ,!
b0000000000000000000000000000000000000000000000000000000000000000 .!
b0000000000000000000000000000000000000000000000000000000000000000 0!
b0000000000000000000000000000000000000000000000000000000000000000 2!
b00000 4!
b0000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b0000000000000000000000000000000000000000000000000000000000000000 ;!
b0000000000000000000000000000000000000000000000000000000000000000 =!
b0000000000000000000000000000000000000000000000000000000000000000 ?!
b0000000000000000000000000000000000000000000000000000000000000000 A!
b0000000000000000000000000000000000000000000000000000000000000000 C!
b0000000000000000000000000000000000000000000000000000000000000000 E!
b0000000000000000000000000000000000000000000000000000000000000000 G!
b0000000000000000000000000000000000000000000000000000000000000000 I!
b0000000000000000000000000000000000000000000000000000000000000000 K!
b0000000000000000000000000000000000000000000000000000000000000000 M!
b0000000000000000000000000000000000000000000000000000000000000000 O!
b0000000000000000000000000000000000000000000000000000000000000000 Q!
b0000000000000000000000000000000000000000000000000000000000000000 S!
b0000000000000000000000000000000000000000000000000000000000000000 U!
b0000000000000000000000000000000000000000000000000000000000000000 W!
b0000000000000000000000000000000000000000000000000000000000000000 Y!
b0000000000000000000000000000000000000000000000000000000000000000 [!
b0000000000000000000000000000000000000000000000000000000000000000 ]!
b0000000000000000000000000000000000000000000000000000000000000000 _!
b0000000000000000000000000000000000000000000000000000000000000000 a!
b0000000000000000000000000000000000000000000000000000000000000000 c!
b0000000000000000000000000000000000000000000000000000000000000000 e!
b0000000000000000000000000000000000000000000000000000000000000000 g!
b0000000000000000000000000000000000000000000000000000000000000000 i!
b0000000000000000000000000000000000000000000000000000000000000000 k!
b0000000000000000000000000000000000000000000000000000000000000000 m!
b0000000000000000000000000000000000000000000000000000000000000000 o!
b0000000000000000000000000000000000000000000000000000000000000000 q!
b0000000000000000000000000000000000000000000000000000000000000000 s!
b0000000000000000000000000000000000000000000000000000000000000000 u!
b0000000000000000000000000000000000000000000000000000000000000000 w!
b0000000000000000000000000000000000000000000000000000000000000000 y!
b0000000000000000000000000000000000000000000000000000000000000000 {!
b00000001 }!
0~!
1!"
0""
b00000000 #"
b0000000000000000000000000000000000000000000000000000000000000000 $"
b0000000000000000000000000000000001111111111111111111111111111100 &"
b00000000000000000000000000000000 ("
0)"
0*"
b00000000 +"
b0000000000000000000000000000000000000000000000000000000000000001 ,"
b0000000000000000000000000000000000000000000000000000000000000000 ."
b0000000000000000000000000000000000000000000000000000000000000000 0"
b0000000000000000000000000000000000000000000000000000000000000000 2"
b0000000000000000000000000000000000000000000000000000000000000000 4"
b0000000000000000000000000000000000000000000000000000000000000000 6"
b0000000000000000000000000000000000000000000000000000000000000000 8"
b0000000000000000000000000000000000000000000000000000000000000000 :"
b0000000000000000000000000000000000000000000000000000000000000000 <"
b0000000000000000000000000000000000000000000000000000000000000000 >"
b0000000000000000000000000000000000000000000000000000000000000000 @"
b0000000000000000000000000000000000000000000000000000000000000000 B"
b0000000000000000000000000000000000000000000000000000000000000000 D"
b0000000000000000000000000000000000000000000000000000000000000000 F"
b0000000000000000000000000000000000000000000000000000000000000000 H"
b0000000000000000000000000000000000000000000000000000000000000000 J"
b0000000000000000000000000000000000000000000000000000000000000000 L"
b0000000000000000000000000000000000000000000000000000000000000000 N"
b0000000000000000000000000000000000000000000000000000000000000000 P"
b0000000000000000000000000000000000000000000000000000000000000000 R"
b0000000000000000000000000000000000000000000000000000000000000000 T"
b0000000000000000000000000000000000000000000000000000000000000000 V"
b0000000000000000000000000000000000000000000000000000000000000000 X"
b0000000000000000000000000000000000000000000000000000000000000000 Z"
b0000000000000000000000000000000000000000000000000000000000000000 \"
b0000000000000000000000000000000000000000000000000000000000000000 ^"
b0000000000000000000000000000000000000000000000000000000000000000 `"
b0000000000000000000000000000000000000000000000000000000000000000 b"
b0000000000000000000000000000000000000000000000000000000000000000 d"
b0000000000000000000000000000000000000000000000000000000000000000 f"
b0000000000000000000000000000000000000000000000000000000000000000 h"
b0000000000000000000000000000000000000000000000000000000000000000 j"
b0000000000000000000000000000000000000000000000000000000000000000 l"
b0000000000000000000000000000000000000000000000000000000000000000 n"
b0000000000000000000000000000000000000000000000000000000000000000 p"
b0000000000000000000000000000000000000000000000000000000000000000 r"
b0000000000000000000000000000000000000000000000000000000000000000 t"
b0000000000000000000000000000000000000000000000000000000000000000 v"
b0000000000000000000000000000000000000000000000000000000000000000 x"
b0000000000000000000000000000000000000000000000000000000000000000 z"
b0000000000000000000000000000000000000000000000000000000000000000 |"
b0000000000000000000000000000000000000000000000000000000000000000 ~"
b0000000000000000000000000000000000000000000000000000000000000000 "#
b0000000000000000000000000000000000000000000000000000000000000000 $#
b0000000000000000000000000000000000000000000000000000000000000000 &#
b0000000000000000000000000000000000000000000000000000000000000000 (#
b0000000000000000000000000000000000000000000000000000000000000000 *#
b0000000000000000000000000000000000000000000000000000000000000000 ,#
b0000000000000000000000000000000000000000000000000000000000000000 .#
b0000000000000000000000000000000000000000000000000000000000000000 0#
b0000000000000000000000000000000000000000000000000000000000000000 2#
b0000000000000000000000000000000000000000000000000000000000000000 4#
b0000000000000000000000000000000000000000000000000000000000000000 6#
b0000000000000000000000000000000000000000000000000000000000000000 8#
b0000000000000000000000000000000000000000000000000000000000000000 :#
b0000000000000000000000000000000000000000000000000000000000000000 <#
b0000000000000000000000000000000000000000000000000000000000000000 >#
b0000000000000000000000000000000000000000000000000000000000000000 @#
b0000000000000000000000000000000000000000000000000000000000000000 B#
b0000000000000000000000000000000000000000000000000000000000000000 D#
b0000000000000000000000000000000000000000000000000000000000000000 F#
b0000000000000000000000000000000000000000000000000000000000000000 H#
b0000000000000000000000000000000000000000000000000000000000000000 J#
b0000000000000000000000000000000000000000000000000000000000000000 L#
b0000000000000000000000000000000000000000000000000000000000000000 N#
b0000000000000000000000000000000000000000000000000000000000000000 P#
b000 R#
b001 S#
b0000000000000000000000000000000000000000000000000000000000000000 T#
b0000000000000000000000000000000000000000000000000000000000000000 V#
b0000000000000000000000000000000000000000000000000000000000000000 X#
b0000000000000000000000000000000000000000000000000000000000000000 Z#
b0000000000000000000000000000000000000000000000000000000000000000 \#
b0000000000000000000000000000000000000000000000000000000000000000 ^#
b0000000000000000000000000000000000000000000000000000000000000000 `#
b0000000000000000000000000000000000000000000000000000000000000000 b#
b0000000000000000000000000000000000000000000000000000000000000000 d#
b0000000000000000000000000000000000000000000000000000000000000000 f#
b0000000000000000000000000000000000000000000000000000000000000000 h#
b0000000000000000000000000000000000000000000000000000000000000000 j#
b0000000000000000000000000000000000000000000000000000000000000000 l#
b0000000000000000000000000000000000000000000000000000000000000000 n#
b0000000000000000000000000000000000000000000000000000000000000000 p#
b0000000000000000000000000000000000000000000000000000000000000000 r#
b0000000000000000000000000000000000000000000000000000000000000000 t#
b0000000000000000000000000000000000000000000000000000000000000000 v#
b0000000000000000000000000000000000000000000000000000000000000000 x#
b0000000000000000000000000000000000000000000000000000000000000000 z#
b0000000000000000000000000000000000000000000000000000000000000000 |#
b0000000000000000000000000000000000000000000000000000000000000000 ~#
b0000000000000000000000000000000000000000000000000000000000000000 "$
b0000000000000000000000000000000000000000000000000000000000000000 $$
b0000000000000000000000000000000000000000000000000000000000000000 &$
b0000000000000000000000000000000000000000000000000000000000000000 ($
b0000000000000000000000000000000000000000000000000000000000000000 *$
b0000000000000000000000000000000000000000000000000000000000000000 ,$
b0000000000000000000000000000000000000000000000000000000000000000 .$
b0000000000000000000000000000000000000000000000000000000000000000 0$
b0000000000000000000000000000000000000000000000000000000000000000 2$
b0000000000000000000000000000000000000000000000000000000000000000 4$
b0000000000000000000000000000000000000000000000000000000000000000 6$
b0000000000000000000000000000000000000000000000000000000000000000 8$
0:$
b0000000000000000000000000000000000000000000000000000000000000000 ;$
b0000000000000000000000000000000000000000000000000000000000000000 =$
b0000000000000000000000000000000000000000000000000000000000000000 ?$
1A$
0B$
b1111111111111111111111111111111110000000000000000000000000000000 C$
b0001111111111111111111111111111111110000000000000000000000000000 E$
b0001111111111111111111111111111111110000000000000000000000000001 G$
b000 I$
b0000000000000000000000000000000000000000000000000000000000000000 J$
b0000000000000000000000000000000000000000000000000000000000000000 L$
b1111111111111111111111111111111111111111111111111111111111111111 N$
b0000000000000000000000000000000000000000000000000000000000000000 P$
1R$
b00000 S$
b00000 T$
b000 U$
0V$
0W$
0X$
b0000000000000000000000000000000000000000000000000000000000000000 Y$
b1111111111111111111111111111111111111111111111111111111111111111 [$
b0000000000000000000000000000000000000000000000000000000000000000 ]$
0_$
0`$
0a$
b00000000 b$
0c$
b00000000 d$
0e$
0f$
0g$
0h$
0i$
0j$
b0000000000000000000000000000000000000000000000000000000000000000 k$
0m$
b00000 n$
b00000 o$
b00000 p$
0q$
0r$
b0000000000000000000000000000000000000000000000000000000000000000 s$
0u$
b0000000000000000000000000000000000000000000000000000000000000000 v$
b00000111 x$
1y$
b0000000000000000000000000000000000000000000000000000000000000000 z$
0|$
b00000000000000000000000000000000 }$
b00000000 ~$
b11 !%
#1
1W$
#2
b00000010 }!
b0000000000000000000000000000000000000000000000000000000000000010 ,"
0W$
#3
b0000000000000000000000000000000010000000000000000000000000000000 '
b00000000000100000000000010010011 )
b0000000000100000000000001001001100000000000100000000000010010011 <
b0000000000000000000000000000000000000000000000000000000000000000 >
1W$
#4
b00000000000000000000000000000001 6!
b00000000000000000000000000000001 7!
b00000000000000000000100000000000 8!
b00000000000100000000000000000000 9!
b00000000000000000000100000000000 :!
b00000011 }!
1~!
0!"
b0000000000000000000000000000000010000000000000000000000000000000 &"
b00000000000100000000000010010011 ("
b0000000000000000000000000000000000000000000000000000000000000011 ,"
b00001 S$
b00100 T$
0W$
#5
1*
b0000000000000000000000000000000000000000000000000000000000000001 @
b00000000000000000000000000000001 B
b00100 C
b0000000000000000000000000000000000000000000000000000000000000001 ;!
b0000000000000000000000000000000000000000000000000000000000000001 ;$
1B$
b1111111111111111111111111111111110000000000000000000000000000001 C$
b001 I$
b1111111111111111111111111111111111111111111111111111111100000000 N$
b0000000000000000000000000000000000000000000000000000000011111111 P$
1W$
#6
b00000100 }!
b00000001 #"
b0000000000000000000000000000000000000000000000000000000000000100 ,"
0W$
#7
b0000000000000000000000000000000000000000000000000000000000000001 .
1W$
#8
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b00000101 }!
0~!
1!"
b0000000000000000000000000000000000000000000000000000000000000101 ,"
b00000 S$
b00000 T$
0W$
#9
0*
b0000000000000000000000000000000000000000000000000000000000000000 .
b0000000000000000000000000000000000000000000000000000000000000000 @
b00000000000000000000000000000000 B
b0000000000000000000000000000000000000000000000000000000000000000 ;!
b0000000000000000000000000000000000000000000000000000000000000000 ;$
0B$
b1111111111111111111111111111111110000000000000000000000000000000 C$
b000 I$
b1111111111111111111111111111111111111111111111111111111111111111 N$
b0000000000000000000000000000000000000000000000000000000000000000 P$
1W$
#10
b00000110 }!
b00000000 #"
b0000000000000000000000000000000000000000000000000000000000000110 ,"
1:$
0R$
0W$
#11
1;
1L
1W$
#12
b00000111 }!
1""
b0000000000000000000000000000000000000000000000000000000000000111 ,"
1V$
0W$
#13
1W$
#14
b00000010 }!
1)"
b0000000000000000000000000000000000000000000000000000000000001000 ,"
b0000000000000000000000000000000000000000000000000000000000000001 ."
0:$
1R$
0V$
0W$
#15
b0000000000000000000000000000000010000000000000000000000000000000 %
b0000000000000000000000000000000010000000000000000000000000000100 '
b00000000001000000000000010010011 )
0;
1W$
