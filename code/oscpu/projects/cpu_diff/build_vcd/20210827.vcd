$version Generated by VerilatedVcd $end
$date Fri Aug 27 06:29:49 2021 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 ,$ clock $end
  $var wire 64 .$ io_logCtrl_log_begin [63:0] $end
  $var wire 64 0$ io_logCtrl_log_end [63:0] $end
  $var wire 64 2$ io_logCtrl_log_level [63:0] $end
  $var wire  1 4$ io_perfInfo_clean $end
  $var wire  1 5$ io_perfInfo_dump $end
  $var wire  8 9$ io_uart_in_ch [7:0] $end
  $var wire  1 8$ io_uart_in_valid $end
  $var wire  8 7$ io_uart_out_ch [7:0] $end
  $var wire  1 6$ io_uart_out_valid $end
  $var wire  1 -$ reset $end
  $scope module SimTop $end
   $var wire  1 ,$ clock $end
   $var wire 32 c! cmt_inst [31:0] $end
   $var wire 64 a! cmt_pc [63:0] $end
   $var wire  1 d! cmt_valid $end
   $var wire 64 _! cmt_wdata [63:0] $end
   $var wire  8 ^! cmt_wdest [7:0] $end
   $var wire  1 ]! cmt_wen $end
   $var wire  1 ?$ cpu_started $end
   $var wire 64 g! cycleCnt [63:0] $end
   $var wire  5 P$ ex_rd_waddr_i [4:0] $end
   $var wire 64 r# ex_rd_wdata_o [63:0] $end
   $var wire  1 =$ ex_rd_wen_o $end
   $var wire  3 J$ id_inst_state_o [2:0] $end
   $var wire  1 D$ if_valid $end
   $var wire 32 ) inst [31:0] $end
   $var wire  3 . inst_funct3 [2:0] $end
   $var wire  7 / inst_funct7 [6:0] $end
   $var wire  5 - inst_opcode [4:0] $end
   $var wire  5 O$ inst_opcode_o [4:0] $end
   $var wire  1 * inst_start $end
   $var wire  3 F$ inst_state [2:0] $end
   $var wire  3 L$ inst_type [2:0] $end
   $var wire  1 0 inst_valid $end
   $var wire 64 i! instrCnt [63:0] $end
   $var wire 64 .$ io_logCtrl_log_begin [63:0] $end
   $var wire 64 0$ io_logCtrl_log_end [63:0] $end
   $var wire 64 2$ io_logCtrl_log_level [63:0] $end
   $var wire  1 4$ io_perfInfo_clean $end
   $var wire  1 5$ io_perfInfo_dump $end
   $var wire  8 9$ io_uart_in_ch [7:0] $end
   $var wire  1 8$ io_uart_in_valid $end
   $var wire  8 7$ io_uart_out_ch [7:0] $end
   $var wire  1 6$ io_uart_out_valid $end
   $var wire 64 0# mem_raddr [63:0] $end
   $var wire  1 Q$ mem_rd_wen_o $end
   $var wire 64 M$ mem_rdata [63:0] $end
   $var wire  1 A$ mem_ren $end
   $var wire 64 t# mem_waddr [63:0] $end
   $var wire 64 M$ mem_wdata [63:0] $end
   $var wire  1 A$ mem_wen $end
   $var wire 64 M$ mem_wmask [63:0] $end
   $var wire 64 M$ op1 [63:0] $end
   $var wire 64 M$ op2 [63:0] $end
   $var wire 64 ' pc [63:0] $end
   $var wire 64 % pc_cur [63:0] $end
   $var wire  1 G$ pc_jmp $end
   $var wire  1 <$ pc_jmp_o $end
   $var wire 64 H$ pc_jmpaddr [63:0] $end
   $var wire 64 M$ pc_jmpaddr_o [63:0] $end
   $var wire  5 , rd_waddr [4:0] $end
   $var wire 64 w# rd_wdata [63:0] $end
   $var wire  1 v# rd_wen $end
   $var wire 64 2# regs(0) [63:0] $end
   $var wire 64 4# regs(1) [63:0] $end
   $var wire 64 F# regs(10) [63:0] $end
   $var wire 64 H# regs(11) [63:0] $end
   $var wire 64 J# regs(12) [63:0] $end
   $var wire 64 L# regs(13) [63:0] $end
   $var wire 64 N# regs(14) [63:0] $end
   $var wire 64 P# regs(15) [63:0] $end
   $var wire 64 R# regs(16) [63:0] $end
   $var wire 64 T# regs(17) [63:0] $end
   $var wire 64 V# regs(18) [63:0] $end
   $var wire 64 X# regs(19) [63:0] $end
   $var wire 64 6# regs(2) [63:0] $end
   $var wire 64 Z# regs(20) [63:0] $end
   $var wire 64 \# regs(21) [63:0] $end
   $var wire 64 ^# regs(22) [63:0] $end
   $var wire 64 `# regs(23) [63:0] $end
   $var wire 64 b# regs(24) [63:0] $end
   $var wire 64 d# regs(25) [63:0] $end
   $var wire 64 f# regs(26) [63:0] $end
   $var wire 64 h# regs(27) [63:0] $end
   $var wire 64 j# regs(28) [63:0] $end
   $var wire 64 l# regs(29) [63:0] $end
   $var wire 64 8# regs(3) [63:0] $end
   $var wire 64 n# regs(30) [63:0] $end
   $var wire 64 p# regs(31) [63:0] $end
   $var wire 64 :# regs(4) [63:0] $end
   $var wire 64 <# regs(5) [63:0] $end
   $var wire 64 ># regs(6) [63:0] $end
   $var wire 64 @# regs(7) [63:0] $end
   $var wire 64 B# regs(8) [63:0] $end
   $var wire 64 D# regs(9) [63:0] $end
   $var wire 64 k! regs_diff(0) [63:0] $end
   $var wire 64 m! regs_diff(1) [63:0] $end
   $var wire 64 !" regs_diff(10) [63:0] $end
   $var wire 64 #" regs_diff(11) [63:0] $end
   $var wire 64 %" regs_diff(12) [63:0] $end
   $var wire 64 '" regs_diff(13) [63:0] $end
   $var wire 64 )" regs_diff(14) [63:0] $end
   $var wire 64 +" regs_diff(15) [63:0] $end
   $var wire 64 -" regs_diff(16) [63:0] $end
   $var wire 64 /" regs_diff(17) [63:0] $end
   $var wire 64 1" regs_diff(18) [63:0] $end
   $var wire 64 3" regs_diff(19) [63:0] $end
   $var wire 64 o! regs_diff(2) [63:0] $end
   $var wire 64 5" regs_diff(20) [63:0] $end
   $var wire 64 7" regs_diff(21) [63:0] $end
   $var wire 64 9" regs_diff(22) [63:0] $end
   $var wire 64 ;" regs_diff(23) [63:0] $end
   $var wire 64 =" regs_diff(24) [63:0] $end
   $var wire 64 ?" regs_diff(25) [63:0] $end
   $var wire 64 A" regs_diff(26) [63:0] $end
   $var wire 64 C" regs_diff(27) [63:0] $end
   $var wire 64 E" regs_diff(28) [63:0] $end
   $var wire 64 G" regs_diff(29) [63:0] $end
   $var wire 64 q! regs_diff(3) [63:0] $end
   $var wire 64 I" regs_diff(30) [63:0] $end
   $var wire 64 K" regs_diff(31) [63:0] $end
   $var wire 64 s! regs_diff(4) [63:0] $end
   $var wire 64 u! regs_diff(5) [63:0] $end
   $var wire 64 w! regs_diff(6) [63:0] $end
   $var wire 64 y! regs_diff(7) [63:0] $end
   $var wire 64 {! regs_diff(8) [63:0] $end
   $var wire 64 }! regs_diff(9) [63:0] $end
   $var wire  1 -$ reset $end
   $var wire 64 0# rs1_data [63:0] $end
   $var wire  5 + rs1_raddr [4:0] $end
   $var wire  1 ;$ rs1_ren $end
   $var wire 64 M$ rs2_data [63:0] $end
   $var wire  5 K$ rs2_raddr [4:0] $end
   $var wire  1 A$ rs2_ren $end
   $var wire  1 \! sig_cmt_ok $end
   $var wire  1 @$ sig_ifreq $end
   $var wire  1 # sig_memread $end
   $var wire  1 A$ sig_memread_ok $end
   $var wire  1 $ sig_memwrite $end
   $var wire  1 B$ sig_memwrite_ok $end
   $var wire  1 C$ sig_wb $end
   $var wire  1 :$ sig_wb_ok $end
   $var wire  1 E$ state_stable $end
   $var wire 64 M$ t1 [63:0] $end
   $var wire  1 e! trap $end
   $var wire  8 f! trap_code [7:0] $end
   $var wire 64 S$ wb_rd_wdata_i [63:0] $end
   $var wire 64 V$ wb_rd_wdata_o [63:0] $end
   $var wire  1 R$ wb_rd_wen_i $end
   $var wire  1 U$ wb_rd_wen_o $end
   $scope module DifftestArchFpRegState $end
    $var wire  1 ,$ clock $end
    $var wire  8 \$ coreid [7:0] $end
    $var wire 64 M$ fpr_0 [63:0] $end
    $var wire 64 M$ fpr_1 [63:0] $end
    $var wire 64 M$ fpr_10 [63:0] $end
    $var wire 64 M$ fpr_11 [63:0] $end
    $var wire 64 M$ fpr_12 [63:0] $end
    $var wire 64 M$ fpr_13 [63:0] $end
    $var wire 64 M$ fpr_14 [63:0] $end
    $var wire 64 M$ fpr_15 [63:0] $end
    $var wire 64 M$ fpr_16 [63:0] $end
    $var wire 64 M$ fpr_17 [63:0] $end
    $var wire 64 M$ fpr_18 [63:0] $end
    $var wire 64 M$ fpr_19 [63:0] $end
    $var wire 64 M$ fpr_2 [63:0] $end
    $var wire 64 M$ fpr_20 [63:0] $end
    $var wire 64 M$ fpr_21 [63:0] $end
    $var wire 64 M$ fpr_22 [63:0] $end
    $var wire 64 M$ fpr_23 [63:0] $end
    $var wire 64 M$ fpr_24 [63:0] $end
    $var wire 64 M$ fpr_25 [63:0] $end
    $var wire 64 M$ fpr_26 [63:0] $end
    $var wire 64 M$ fpr_27 [63:0] $end
    $var wire 64 M$ fpr_28 [63:0] $end
    $var wire 64 M$ fpr_29 [63:0] $end
    $var wire 64 M$ fpr_3 [63:0] $end
    $var wire 64 M$ fpr_30 [63:0] $end
    $var wire 64 M$ fpr_31 [63:0] $end
    $var wire 64 M$ fpr_4 [63:0] $end
    $var wire 64 M$ fpr_5 [63:0] $end
    $var wire 64 M$ fpr_6 [63:0] $end
    $var wire 64 M$ fpr_7 [63:0] $end
    $var wire 64 M$ fpr_8 [63:0] $end
    $var wire 64 M$ fpr_9 [63:0] $end
   $upscope $end
   $scope module DifftestArchIntRegState $end
    $var wire  1 ,$ clock $end
    $var wire  8 \$ coreid [7:0] $end
    $var wire 64 M" gpr_0 [63:0] $end
    $var wire 64 O" gpr_1 [63:0] $end
    $var wire 64 a" gpr_10 [63:0] $end
    $var wire 64 c" gpr_11 [63:0] $end
    $var wire 64 e" gpr_12 [63:0] $end
    $var wire 64 g" gpr_13 [63:0] $end
    $var wire 64 i" gpr_14 [63:0] $end
    $var wire 64 k" gpr_15 [63:0] $end
    $var wire 64 m" gpr_16 [63:0] $end
    $var wire 64 o" gpr_17 [63:0] $end
    $var wire 64 q" gpr_18 [63:0] $end
    $var wire 64 s" gpr_19 [63:0] $end
    $var wire 64 Q" gpr_2 [63:0] $end
    $var wire 64 u" gpr_20 [63:0] $end
    $var wire 64 w" gpr_21 [63:0] $end
    $var wire 64 y" gpr_22 [63:0] $end
    $var wire 64 {" gpr_23 [63:0] $end
    $var wire 64 }" gpr_24 [63:0] $end
    $var wire 64 !# gpr_25 [63:0] $end
    $var wire 64 ## gpr_26 [63:0] $end
    $var wire 64 %# gpr_27 [63:0] $end
    $var wire 64 '# gpr_28 [63:0] $end
    $var wire 64 )# gpr_29 [63:0] $end
    $var wire 64 S" gpr_3 [63:0] $end
    $var wire 64 +# gpr_30 [63:0] $end
    $var wire 64 -# gpr_31 [63:0] $end
    $var wire 64 U" gpr_4 [63:0] $end
    $var wire 64 W" gpr_5 [63:0] $end
    $var wire 64 Y" gpr_6 [63:0] $end
    $var wire 64 [" gpr_7 [63:0] $end
    $var wire 64 ]" gpr_8 [63:0] $end
    $var wire 64 _" gpr_9 [63:0] $end
   $upscope $end
   $scope module DifftestCSRState $end
    $var wire  1 ,$ clock $end
    $var wire  8 \$ coreid [7:0] $end
    $var wire 64 M$ mcause [63:0] $end
    $var wire 64 M$ medeleg [63:0] $end
    $var wire 64 M$ mepc [63:0] $end
    $var wire 64 M$ mideleg [63:0] $end
    $var wire 64 M$ mie [63:0] $end
    $var wire 64 M$ mip [63:0] $end
    $var wire 64 M$ mscratch [63:0] $end
    $var wire 64 M$ mstatus [63:0] $end
    $var wire 64 M$ mtval [63:0] $end
    $var wire 64 M$ mtvec [63:0] $end
    $var wire  2 ]$ priviledgeMode [1:0] $end
    $var wire 64 M$ satp [63:0] $end
    $var wire 64 M$ scause [63:0] $end
    $var wire 64 M$ sepc [63:0] $end
    $var wire 64 M$ sscratch [63:0] $end
    $var wire 64 M$ sstatus [63:0] $end
    $var wire 64 M$ stval [63:0] $end
    $var wire 64 M$ stvec [63:0] $end
   $upscope $end
   $scope module DifftestInstrCommit $end
    $var wire  1 ,$ clock $end
    $var wire  8 \$ coreid [7:0] $end
    $var wire  8 \$ index [7:0] $end
    $var wire 32 c! instr [31:0] $end
    $var wire  1 A$ isRVC $end
    $var wire 64 a! pc [63:0] $end
    $var wire  1 A$ scFailed $end
    $var wire  1 A$ skip $end
    $var wire  1 d! valid $end
    $var wire 64 _! wdata [63:0] $end
    $var wire  8 ^! wdest [7:0] $end
    $var wire  1 ]! wen $end
   $upscope $end
   $scope module DifftestTrapEvent $end
    $var wire  1 ,$ clock $end
    $var wire  3 /# code [2:0] $end
    $var wire  8 \$ coreid [7:0] $end
    $var wire 64 g! cycleCnt [63:0] $end
    $var wire 64 i! instrCnt [63:0] $end
    $var wire 64 a! pc [63:0] $end
    $var wire  1 e! valid $end
   $upscope $end
   $scope module Exe_stage $end
    $var wire  1 ,$ clk $end
    $var wire  3 . inst_funct3 [2:0] $end
    $var wire  7 / inst_funct7 [6:0] $end
    $var wire  5 - inst_opcode [4:0] $end
    $var wire 64 M$ op1 [63:0] $end
    $var wire 64 M$ op2 [63:0] $end
    $var wire  1 <$ pc_jmp $end
    $var wire  1 <$ pc_jmp_0 $end
    $var wire 64 M$ pc_jmpaddr [63:0] $end
    $var wire 64 M$ pc_jmpaddr_0 [63:0] $end
    $var wire 64 r# rd_data [63:0] $end
    $var wire 64 r# rd_wdata_o [63:0] $end
    $var wire  1 y# rd_wen $end
    $var wire  1 =$ rd_wen_o $end
    $var wire  1 -$ rst $end
    $var wire  1 A$ stage_ex $end
    $var wire 64 M$ t1 [63:0] $end
   $upscope $end
   $scope module Id_stage $end
    $var wire 32 7 B_imm [31:0] $end
    $var wire 32 5 I_imm [31:0] $end
    $var wire 32 9 J_imm [31:0] $end
    $var wire 32 Z$ R_imm [31:0] $end
    $var wire 32 6 S_imm [31:0] $end
    $var wire 32 8 U_imm [31:0] $end
    $var wire  1 ,$ clk $end
    $var wire  1 ?$ cpu_started $end
    $var wire 64 M$ imm [63:0] $end
    $var wire 32 Z$ imm0 [31:0] $end
    $var wire 32 ) inst [31:0] $end
    $var wire  3 . inst_funct3 [2:0] $end
    $var wire  7 / inst_funct7 [6:0] $end
    $var wire  5 - inst_opcode [4:0] $end
    $var wire  3 L$ inst_type [2:0] $end
    $var wire 64 0# mem_raddr [63:0] $end
    $var wire 64 M$ mem_rdata [63:0] $end
    $var wire  1 A$ mem_ren $end
    $var wire 64 t# mem_waddr [63:0] $end
    $var wire 64 M$ mem_wdata [63:0] $end
    $var wire  1 A$ mem_wen $end
    $var wire 64 M$ mem_wmask [63:0] $end
    $var wire 64 M$ op1 [63:0] $end
    $var wire 64 M$ op2 [63:0] $end
    $var wire 64 ' pc [63:0] $end
    $var wire 64 % pc_cur [63:0] $end
    $var wire  5 , rd [4:0] $end
    $var wire  5 , rd_waddr [4:0] $end
    $var wire  5 + rs1 [4:0] $end
    $var wire 64 0# rs1_data [63:0] $end
    $var wire  5 + rs1_raddr [4:0] $end
    $var wire  1 ;$ rs1_ren $end
    $var wire  1 ;$ rs1_ren0 $end
    $var wire  5 K$ rs2 [4:0] $end
    $var wire 64 M$ rs2_data [63:0] $end
    $var wire  5 K$ rs2_raddr [4:0] $end
    $var wire  1 A$ rs2_ren $end
    $var wire  1 A$ rs2_ren0 $end
    $var wire  1 -$ rst $end
    $var wire  1 # sig_memread $end
    $var wire  1 $ sig_memwrite $end
    $var wire  1 A$ stage_id $end
    $var wire 64 M$ t1 [63:0] $end
   $upscope $end
   $scope module If_stage $end
    $var wire  1 ,$ clk $end
    $var wire  1 X$ cnt_clear $end
    $var wire  8 >$ cnt_val [7:0] $end
    $var wire  1 @$ ifreq $end
    $var wire 32 ) inst [31:0] $end
    $var wire  1 * inst_start $end
    $var wire 64 ' pc [63:0] $end
    $var wire 64 % pc_cur [63:0] $end
    $var wire  1 <$ pc_jmp $end
    $var wire 64 M$ pc_jmpaddr [63:0] $end
    $var wire 64 1 rdata [63:0] $end
    $var wire  1 -$ rst $end
    $scope module RAMHelper $end
     $var wire  1 ,$ clk $end
     $var wire  1 C$ en $end
     $var wire 64 3 rIdx [63:0] $end
     $var wire 64 1 rdata [63:0] $end
     $var wire 64 M$ wIdx [63:0] $end
     $var wire 64 M$ wdata [63:0] $end
     $var wire  1 A$ wen $end
     $var wire 64 M$ wmask [63:0] $end
    $upscope $end
    $scope module u_counter $end
     $var wire  1 X$ clear $end
     $var wire  1 ,$ clk $end
     $var wire  8 Y$ max [7:0] $end
     $var wire  1 -$ rst $end
     $var wire  8 >$ val [7:0] $end
    $upscope $end
   $upscope $end
   $scope module Mem_stage $end
    $var wire  1 ,$ clk $end
    $var wire 64 0# raddr [63:0] $end
    $var wire 64 M$ rdata [63:0] $end
    $var wire  1 A$ ren $end
    $var wire  1 -$ rst $end
    $var wire  1 A$ sig_memread_ok $end
    $var wire  1 B$ sig_memwrite_ok $end
    $var wire 64 t# waddr [63:0] $end
    $var wire 64 M$ wdata [63:0] $end
    $var wire  1 A$ wen $end
    $var wire 64 M$ wmask [63:0] $end
    $scope module u1_mem_access $end
     $var wire 64 0# addr [63:0] $end
     $var wire 64 }# addr1 [63:0] $end
     $var wire 64 !$ addr2 [63:0] $end
     $var wire 64 {# addr_rel [63:0] $end
     $var wire  3 #$ byte_offset [2:0] $end
     $var wire  1 ,$ clk $end
     $var wire  1 z# ena2 $end
     $var wire 64 M$ rdata [63:0] $end
     $var wire 64 $$ rdata1 [63:0] $end
     $var wire 64 &$ rdata2 [63:0] $end
     $var wire 64 M$ rdata_0 [63:0] $end
     $var wire  1 A$ ren $end
     $var wire  1 A$ sig_memread_ok $end
     $var wire  1 B$ sig_memwrite_ok $end
     $var wire 64 M$ wdata [63:0] $end
     $var wire  1 A$ wen $end
     $var wire 64 M$ wmask [63:0] $end
     $var wire 64 ($ wmask1 [63:0] $end
     $var wire 64 *$ wmask2 [63:0] $end
    $upscope $end
   $upscope $end
   $scope module Regfile $end
    $var wire  1 ,$ clk $end
    $var wire  5 + r_addr1 [4:0] $end
    $var wire  5 K$ r_addr2 [4:0] $end
    $var wire 64 0# r_data1 [63:0] $end
    $var wire 64 M$ r_data2 [63:0] $end
    $var wire  1 ;$ r_ena1 $end
    $var wire  1 A$ r_ena2 $end
    $var wire 64 : regs(0) [63:0] $end
    $var wire 64 < regs(1) [63:0] $end
    $var wire 64 N regs(10) [63:0] $end
    $var wire 64 P regs(11) [63:0] $end
    $var wire 64 R regs(12) [63:0] $end
    $var wire 64 T regs(13) [63:0] $end
    $var wire 64 V regs(14) [63:0] $end
    $var wire 64 X regs(15) [63:0] $end
    $var wire 64 Z regs(16) [63:0] $end
    $var wire 64 \ regs(17) [63:0] $end
    $var wire 64 ^ regs(18) [63:0] $end
    $var wire 64 ` regs(19) [63:0] $end
    $var wire 64 > regs(2) [63:0] $end
    $var wire 64 b regs(20) [63:0] $end
    $var wire 64 d regs(21) [63:0] $end
    $var wire 64 f regs(22) [63:0] $end
    $var wire 64 h regs(23) [63:0] $end
    $var wire 64 j regs(24) [63:0] $end
    $var wire 64 l regs(25) [63:0] $end
    $var wire 64 n regs(26) [63:0] $end
    $var wire 64 p regs(27) [63:0] $end
    $var wire 64 r regs(28) [63:0] $end
    $var wire 64 t regs(29) [63:0] $end
    $var wire 64 @ regs(3) [63:0] $end
    $var wire 64 v regs(30) [63:0] $end
    $var wire 64 x regs(31) [63:0] $end
    $var wire 64 B regs(4) [63:0] $end
    $var wire 64 D regs(5) [63:0] $end
    $var wire 64 F regs(6) [63:0] $end
    $var wire 64 H regs(7) [63:0] $end
    $var wire 64 J regs(8) [63:0] $end
    $var wire 64 L regs(9) [63:0] $end
    $var wire 64 z regs_o(0) [63:0] $end
    $var wire 64 | regs_o(1) [63:0] $end
    $var wire 64 0! regs_o(10) [63:0] $end
    $var wire 64 2! regs_o(11) [63:0] $end
    $var wire 64 4! regs_o(12) [63:0] $end
    $var wire 64 6! regs_o(13) [63:0] $end
    $var wire 64 8! regs_o(14) [63:0] $end
    $var wire 64 :! regs_o(15) [63:0] $end
    $var wire 64 <! regs_o(16) [63:0] $end
    $var wire 64 >! regs_o(17) [63:0] $end
    $var wire 64 @! regs_o(18) [63:0] $end
    $var wire 64 B! regs_o(19) [63:0] $end
    $var wire 64 ~ regs_o(2) [63:0] $end
    $var wire 64 D! regs_o(20) [63:0] $end
    $var wire 64 F! regs_o(21) [63:0] $end
    $var wire 64 H! regs_o(22) [63:0] $end
    $var wire 64 J! regs_o(23) [63:0] $end
    $var wire 64 L! regs_o(24) [63:0] $end
    $var wire 64 N! regs_o(25) [63:0] $end
    $var wire 64 P! regs_o(26) [63:0] $end
    $var wire 64 R! regs_o(27) [63:0] $end
    $var wire 64 T! regs_o(28) [63:0] $end
    $var wire 64 V! regs_o(29) [63:0] $end
    $var wire 64 "! regs_o(3) [63:0] $end
    $var wire 64 X! regs_o(30) [63:0] $end
    $var wire 64 Z! regs_o(31) [63:0] $end
    $var wire 64 $! regs_o(4) [63:0] $end
    $var wire 64 &! regs_o(5) [63:0] $end
    $var wire 64 (! regs_o(6) [63:0] $end
    $var wire 64 *! regs_o(7) [63:0] $end
    $var wire 64 ,! regs_o(8) [63:0] $end
    $var wire 64 .! regs_o(9) [63:0] $end
    $var wire  1 -$ rst $end
    $var wire  1 :$ sig_wb_ok $end
    $var wire  5 , w_addr [4:0] $end
    $var wire 64 w# w_data [63:0] $end
    $var wire  1 v# w_ena $end
   $upscope $end
   $scope module u1_wb_stage $end
    $var wire  1 [$ ch $end
    $var wire  1 ,$ clk $end
    $var wire 64 r# ex_wdata_i [63:0] $end
    $var wire  1 =$ ex_wen_i $end
    $var wire 64 M$ mem_wdata_i [63:0] $end
    $var wire  1 Q$ mem_wen_i $end
    $var wire  1 -$ rst $end
    $var wire  1 A$ stage_wb $end
    $var wire 64 w# wdata_o [63:0] $end
    $var wire  1 v# wen_o $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b0000000000000000000000000000000001111111111111111111111111111100 %
b0000000000000000000000000000000001111111111111111111111111111100 '
b00000000000000000000000000000000 )
0*
b00000 +
b00000 ,
b00000 -
b000 .
b0000000 /
10
b0000000000000000000000000000000000000000000000000000000000000000 1
b0001111111111111111111111111111111111111111111111111111111111111 3
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b0000000000000000000000000000000000000000000000000000000000000000 :
b0000000000000000000000000000000000000000000000000000000000000000 <
b0000000000000000000000000000000000000000000000000000000000000000 >
b0000000000000000000000000000000000000000000000000000000000000000 @
b0000000000000000000000000000000000000000000000000000000000000000 B
b0000000000000000000000000000000000000000000000000000000000000000 D
b0000000000000000000000000000000000000000000000000000000000000000 F
b0000000000000000000000000000000000000000000000000000000000000000 H
b0000000000000000000000000000000000000000000000000000000000000000 J
b0000000000000000000000000000000000000000000000000000000000000000 L
b0000000000000000000000000000000000000000000000000000000000000000 N
b0000000000000000000000000000000000000000000000000000000000000000 P
b0000000000000000000000000000000000000000000000000000000000000000 R
b0000000000000000000000000000000000000000000000000000000000000000 T
b0000000000000000000000000000000000000000000000000000000000000000 V
b0000000000000000000000000000000000000000000000000000000000000000 X
b0000000000000000000000000000000000000000000000000000000000000000 Z
b0000000000000000000000000000000000000000000000000000000000000000 \
b0000000000000000000000000000000000000000000000000000000000000000 ^
b0000000000000000000000000000000000000000000000000000000000000000 `
b0000000000000000000000000000000000000000000000000000000000000000 b
b0000000000000000000000000000000000000000000000000000000000000000 d
b0000000000000000000000000000000000000000000000000000000000000000 f
b0000000000000000000000000000000000000000000000000000000000000000 h
b0000000000000000000000000000000000000000000000000000000000000000 j
b0000000000000000000000000000000000000000000000000000000000000000 l
b0000000000000000000000000000000000000000000000000000000000000000 n
b0000000000000000000000000000000000000000000000000000000000000000 p
b0000000000000000000000000000000000000000000000000000000000000000 r
b0000000000000000000000000000000000000000000000000000000000000000 t
b0000000000000000000000000000000000000000000000000000000000000000 v
b0000000000000000000000000000000000000000000000000000000000000000 x
b0000000000000000000000000000000000000000000000000000000000000000 z
b0000000000000000000000000000000000000000000000000000000000000000 |
b0000000000000000000000000000000000000000000000000000000000000000 ~
b0000000000000000000000000000000000000000000000000000000000000000 "!
b0000000000000000000000000000000000000000000000000000000000000000 $!
b0000000000000000000000000000000000000000000000000000000000000000 &!
b0000000000000000000000000000000000000000000000000000000000000000 (!
b0000000000000000000000000000000000000000000000000000000000000000 *!
b0000000000000000000000000000000000000000000000000000000000000000 ,!
b0000000000000000000000000000000000000000000000000000000000000000 .!
b0000000000000000000000000000000000000000000000000000000000000000 0!
b0000000000000000000000000000000000000000000000000000000000000000 2!
b0000000000000000000000000000000000000000000000000000000000000000 4!
b0000000000000000000000000000000000000000000000000000000000000000 6!
b0000000000000000000000000000000000000000000000000000000000000000 8!
b0000000000000000000000000000000000000000000000000000000000000000 :!
b0000000000000000000000000000000000000000000000000000000000000000 <!
b0000000000000000000000000000000000000000000000000000000000000000 >!
b0000000000000000000000000000000000000000000000000000000000000000 @!
b0000000000000000000000000000000000000000000000000000000000000000 B!
b0000000000000000000000000000000000000000000000000000000000000000 D!
b0000000000000000000000000000000000000000000000000000000000000000 F!
b0000000000000000000000000000000000000000000000000000000000000000 H!
b0000000000000000000000000000000000000000000000000000000000000000 J!
b0000000000000000000000000000000000000000000000000000000000000000 L!
b0000000000000000000000000000000000000000000000000000000000000000 N!
b0000000000000000000000000000000000000000000000000000000000000000 P!
b0000000000000000000000000000000000000000000000000000000000000000 R!
b0000000000000000000000000000000000000000000000000000000000000000 T!
b0000000000000000000000000000000000000000000000000000000000000000 V!
b0000000000000000000000000000000000000000000000000000000000000000 X!
b0000000000000000000000000000000000000000000000000000000000000000 Z!
1\!
0]!
b00000000 ^!
b0000000000000000000000000000000000000000000000000000000000000000 _!
b0000000000000000000000000000000001111111111111111111111111111100 a!
b00000000000000000000000000000000 c!
1d!
0e!
b00000000 f!
b0000000000000000000000000000000000000000000000000000000000000001 g!
b0000000000000000000000000000000000000000000000000000000000000001 i!
b0000000000000000000000000000000000000000000000000000000000000000 k!
b0000000000000000000000000000000000000000000000000000000000000000 m!
b0000000000000000000000000000000000000000000000000000000000000000 o!
b0000000000000000000000000000000000000000000000000000000000000000 q!
b0000000000000000000000000000000000000000000000000000000000000000 s!
b0000000000000000000000000000000000000000000000000000000000000000 u!
b0000000000000000000000000000000000000000000000000000000000000000 w!
b0000000000000000000000000000000000000000000000000000000000000000 y!
b0000000000000000000000000000000000000000000000000000000000000000 {!
b0000000000000000000000000000000000000000000000000000000000000000 }!
b0000000000000000000000000000000000000000000000000000000000000000 !"
b0000000000000000000000000000000000000000000000000000000000000000 #"
b0000000000000000000000000000000000000000000000000000000000000000 %"
b0000000000000000000000000000000000000000000000000000000000000000 '"
b0000000000000000000000000000000000000000000000000000000000000000 )"
b0000000000000000000000000000000000000000000000000000000000000000 +"
b0000000000000000000000000000000000000000000000000000000000000000 -"
b0000000000000000000000000000000000000000000000000000000000000000 /"
b0000000000000000000000000000000000000000000000000000000000000000 1"
b0000000000000000000000000000000000000000000000000000000000000000 3"
b0000000000000000000000000000000000000000000000000000000000000000 5"
b0000000000000000000000000000000000000000000000000000000000000000 7"
b0000000000000000000000000000000000000000000000000000000000000000 9"
b0000000000000000000000000000000000000000000000000000000000000000 ;"
b0000000000000000000000000000000000000000000000000000000000000000 ="
b0000000000000000000000000000000000000000000000000000000000000000 ?"
b0000000000000000000000000000000000000000000000000000000000000000 A"
b0000000000000000000000000000000000000000000000000000000000000000 C"
b0000000000000000000000000000000000000000000000000000000000000000 E"
b0000000000000000000000000000000000000000000000000000000000000000 G"
b0000000000000000000000000000000000000000000000000000000000000000 I"
b0000000000000000000000000000000000000000000000000000000000000000 K"
b0000000000000000000000000000000000000000000000000000000000000000 M"
b0000000000000000000000000000000000000000000000000000000000000000 O"
b0000000000000000000000000000000000000000000000000000000000000000 Q"
b0000000000000000000000000000000000000000000000000000000000000000 S"
b0000000000000000000000000000000000000000000000000000000000000000 U"
b0000000000000000000000000000000000000000000000000000000000000000 W"
b0000000000000000000000000000000000000000000000000000000000000000 Y"
b0000000000000000000000000000000000000000000000000000000000000000 ["
b0000000000000000000000000000000000000000000000000000000000000000 ]"
b0000000000000000000000000000000000000000000000000000000000000000 _"
b0000000000000000000000000000000000000000000000000000000000000000 a"
b0000000000000000000000000000000000000000000000000000000000000000 c"
b0000000000000000000000000000000000000000000000000000000000000000 e"
b0000000000000000000000000000000000000000000000000000000000000000 g"
b0000000000000000000000000000000000000000000000000000000000000000 i"
b0000000000000000000000000000000000000000000000000000000000000000 k"
b0000000000000000000000000000000000000000000000000000000000000000 m"
b0000000000000000000000000000000000000000000000000000000000000000 o"
b0000000000000000000000000000000000000000000000000000000000000000 q"
b0000000000000000000000000000000000000000000000000000000000000000 s"
b0000000000000000000000000000000000000000000000000000000000000000 u"
b0000000000000000000000000000000000000000000000000000000000000000 w"
b0000000000000000000000000000000000000000000000000000000000000000 y"
b0000000000000000000000000000000000000000000000000000000000000000 {"
b0000000000000000000000000000000000000000000000000000000000000000 }"
b0000000000000000000000000000000000000000000000000000000000000000 !#
b0000000000000000000000000000000000000000000000000000000000000000 ##
b0000000000000000000000000000000000000000000000000000000000000000 %#
b0000000000000000000000000000000000000000000000000000000000000000 '#
b0000000000000000000000000000000000000000000000000000000000000000 )#
b0000000000000000000000000000000000000000000000000000000000000000 +#
b0000000000000000000000000000000000000000000000000000000000000000 -#
b000 /#
b0000000000000000000000000000000000000000000000000000000000000000 0#
b0000000000000000000000000000000000000000000000000000000000000000 2#
b0000000000000000000000000000000000000000000000000000000000000000 4#
b0000000000000000000000000000000000000000000000000000000000000000 6#
b0000000000000000000000000000000000000000000000000000000000000000 8#
b0000000000000000000000000000000000000000000000000000000000000000 :#
b0000000000000000000000000000000000000000000000000000000000000000 <#
b0000000000000000000000000000000000000000000000000000000000000000 >#
b0000000000000000000000000000000000000000000000000000000000000000 @#
b0000000000000000000000000000000000000000000000000000000000000000 B#
b0000000000000000000000000000000000000000000000000000000000000000 D#
b0000000000000000000000000000000000000000000000000000000000000000 F#
b0000000000000000000000000000000000000000000000000000000000000000 H#
b0000000000000000000000000000000000000000000000000000000000000000 J#
b0000000000000000000000000000000000000000000000000000000000000000 L#
b0000000000000000000000000000000000000000000000000000000000000000 N#
b0000000000000000000000000000000000000000000000000000000000000000 P#
b0000000000000000000000000000000000000000000000000000000000000000 R#
b0000000000000000000000000000000000000000000000000000000000000000 T#
b0000000000000000000000000000000000000000000000000000000000000000 V#
b0000000000000000000000000000000000000000000000000000000000000000 X#
b0000000000000000000000000000000000000000000000000000000000000000 Z#
b0000000000000000000000000000000000000000000000000000000000000000 \#
b0000000000000000000000000000000000000000000000000000000000000000 ^#
b0000000000000000000000000000000000000000000000000000000000000000 `#
b0000000000000000000000000000000000000000000000000000000000000000 b#
b0000000000000000000000000000000000000000000000000000000000000000 d#
b0000000000000000000000000000000000000000000000000000000000000000 f#
b0000000000000000000000000000000000000000000000000000000000000000 h#
b0000000000000000000000000000000000000000000000000000000000000000 j#
b0000000000000000000000000000000000000000000000000000000000000000 l#
b0000000000000000000000000000000000000000000000000000000000000000 n#
b0000000000000000000000000000000000000000000000000000000000000000 p#
b0000000000000000000000000000000000000000000000000000000000000000 r#
b0000000000000000000000000000000000000000000000000000000000000000 t#
1v#
b0000000000000000000000000000000000000000000000000000000000000000 w#
1y#
0z#
b1111111111111111111111111111111110000000000000000000000000000000 {#
b0001111111111111111111111111111111110000000000000000000000000000 }#
b0001111111111111111111111111111111110000000000000000000000000001 !$
b000 #$
b0000000000000000000000000000000000000000000000000000000000000000 $$
b0000000000000000000000000000000000000000000000000000000000000000 &$
b1111111111111111111111111111111111111111111111111111111111111111 ($
b0000000000000000000000000000000000000000000000000000000000000000 *$
0,$
0-$
b0000000000000000000000000000000000000000000000000000000000000000 .$
b1111111111111111111111111111111111111111111111111111111111111111 0$
b0000000000000000000000000000000000000000000000000000000000000000 2$
04$
05$
06$
b00000000 7$
08$
b00000000 9$
0:$
1;$
0<$
1=$
b00000001 >$
0?$
0@$
0A$
0B$
1C$
0D$
0E$
b000 F$
0G$
b0000000000000000000000000000000000000000000000000000000000000000 H$
b000 J$
b00000 K$
b000 L$
b0000000000000000000000000000000000000000000000000000000000000000 M$
b00000 O$
b00000 P$
0Q$
0R$
b0000000000000000000000000000000000000000000000000000000000000000 S$
0U$
b0000000000000000000000000000000000000000000000000000000000000000 V$
0X$
b00000101 Y$
b00000000000000000000000000000000 Z$
0[$
b00000000 \$
b11 ]$
#1
1,$
b00000010 >$
#2
1]!
b0000000000000000000000000000000000000000000000000000000000000010 g!
b0000000000000000000000000000000000000000000000000000000000000010 i!
0,$
#3
1,$
b00000011 >$
#4
b0000000000000000000000000000000000000000000000000000000000000011 g!
b0000000000000000000000000000000000000000000000000000000000000011 i!
0,$
#5
1,$
b00000100 >$
#6
b0000000000000000000000000000000000000000000000000000000000000100 g!
b0000000000000000000000000000000000000000000000000000000000000100 i!
0,$
#7
1,$
b00000101 >$
#8
b0000000000000000000000000000000000000000000000000000000000000101 g!
b0000000000000000000000000000000000000000000000000000000000000101 i!
0,$
#9
1,$
b00000000 >$
#10
b0000000000000000000000000000000000000000000000000000000000000110 g!
b0000000000000000000000000000000000000000000000000000000000000110 i!
0,$
#11
b0000000000000000000000000000000010000000000000000000000000000000 '
b00000000000100000000000010010011 )
1*
b00001 ,
b00100 -
b0000000000100000000000001001001100000000000100000000000010010011 1
b0000000000000000000000000000000000000000000000000000000000000000 3
b00000000000000000000000000000001 5
b00000000000000000000000000000001 6
b00000000000000000000100000000000 7
b00000000000100000000000000000000 8
b00000000000000000000100000000000 9
1,$
1:$
b00000001 >$
#12
b00000001 ^!
b0000000000000000000000000000000010000000000000000000000000000000 a!
b00000000000100000000000010010011 c!
b0000000000000000000000000000000000000000000000000000000000000111 g!
b0000000000000000000000000000000000000000000000000000000000000111 i!
0,$
#13
1,$
b00000010 >$
